[tox]
minversion = 3.23.1
isolated_build = True
skipsdist = True
envlist = {py310}-django{32}

[base]
install_command = poetry add {packages}
deps =
    poetry-core

[testenv:dev]
description = Run application in dev mode.
allowlist_externals = poetry
setenv = DJANGO_ENV=dev-virtual
commands =
    poetry install
    poetry run python manage.py collectstatic --noinput --clear
    poetry run python manage.py makemigrations
    poetry run python manage.py migrate --noinput
;    poetry run python manage.py runserver
    poetry run gunicorn --bind :8000 configure.wsgi:application

[testenv:codeFormat]
description = Run code formatting. --To be run inside virtual env / container.--
allowlist_externals =
    black
    isort
commands =
    black .
    isort .

[testenv:lintAndTypeCheck]
description = Run lint and type checking. --To be run inside virtual env / container.--
allowlist_externals =
    flake8
    pylint
    mypy
commands =
    flake8
    pylint core
    mypy .

[testenv:testsDebug]
description = Run tests in debug mode. --To be run inside virtual env / container.--
allowlist_externals = poetry
commands =
    poetry install
;    drop to PDB on first failure, then end test session
    poetry run pytest -x --pdb

;    drop into the PDB prompt immediately at the start of each test
;    poetry run pytest --trace

[testenv:codeGuarantee]
description = Run code formatting + lint and type checking + tests + coverage. --To be run inside virtual env / container.--
allowlist_externals =
    black
    isort
    flake8
    pylint
    mypy
    poetry
commands =
    black .
    isort .
    flake8
    pylint core
    mypy .
    poetry install
    poetry run pytest
    poetry run coverage report
;    poetry run coverage html


