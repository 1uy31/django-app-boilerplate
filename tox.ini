[tox]
minversion = 3.23.1
isolated_build = True
skipsdist = True
envlist = {py38}-django{32}

[base]
install_command = poetry add {packages}
deps =
    poetry-core

[testenv:codeFormat]
description = Run code formatting.
allowlist_externals =
    black
    isort
commands =
    black .
    isort .

[testenv:lintAndTypeCheck]
description = Run lint and type checking.
allowlist_externals =
    flake8
    pylint
    mypy
commands =
    flake8
    pylint main_backend
    mypy .

[testenv:testCoverage]
description = Run tests + coverage.
allowlist_externals = poetry
commands =
    poetry install
    poetry run pytest
    poetry run coverage report
;    poetry run coverage html

[testenv:codeGuarantee]
description = Run code formatting + lint and type checking + tests + coverage.
allowlist_externals =
    black
    isort
    flake8
    pylint
    mypy
    poetry
commands =
    black .
    isort .
    flake8
    pylint main_backend
    mypy .
    poetry install
    poetry run pytest
    poetry run coverage report
;    poetry run coverage html

[testenv:dev]
description = Run application in dev mode.
allowlist_externals = poetry
setenv = DJANGO_ENV=development
commands =
    poetry install
    poetry run python manage.py collectstatic --noinput --clear
    poetry run python manage.py makemigrations
    poetry run python manage.py migrate
    poetry run python manage.py runserver
;    poetry run gunicorn --bind :8000 configure.wsgi:application


